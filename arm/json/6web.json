{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "defaultValue": "vnet1",
      "type": "String"
    },

    "subnetName": {
      "defaultValue": "vnet1",
      "type": "String"
    },

    "adminUsername": {
      "defaultValue": "larry",
      "type": "String"
    },
    "adminPassword": {
      "defaultValue": "Monday123$",
      "type": "String"
    },
    "vmName": {
      "defaultValue": "vmapp1",
      "type": "String"
    },
    "nifName": {
      "defaultValue": "mynif",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-10-01",
      "name": "[parameters('nifName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[concat('/subscriptions/590f79be-f0a3-4037-b444-21d2aebea87e/resourceGroups/test1rg/providers/Microsoft.Network/virtualNetworks/', parameters('vnetName'), parameters('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[parameters('vmName')]",
      "location": "eastus",
      "dependsOn": [],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('vmName'), '_OsDisk_1_fd62837d479d4961b32d095714c3686f')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "cmpuapp1",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nifName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "name": "[concat(parameters('vmName'),'/', 'InstallWebServer')]",
      "location": "eastus",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {},
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/tutorial-vm-extension/installWebServer.ps1"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File installWebServer.ps1"

          /*"commandToExecute": "$LocalTempDir = $env:TEMP; $ChromeInstaller = "ChromeInstaller.exe"; (new-object    System.Net.WebClient).DownloadFile('http://dl.google.com/chrome/install/375.126/chrome_installer.exe', "$LocalTempDir\$ChromeInstaller"); & "$LocalTempDir\$ChromeInstaller" /silent /install; $Process2Monitor =  "ChromeInstaller"; Do { $ProcessesFound = Get-Process | ?{$Process2Monitor -contains $_.Name} | Select-Object -ExpandProperty Name; If ($ProcessesFound) { "Still running: $($ProcessesFound -join ', ')" | Write-Host; Start-Sleep -Seconds 2 } else { rm "$LocalTempDir\$ChromeInstaller" -ErrorAction SilentlyContinue -Verbose } } Until (!$ProcessesFound)"
          /* "commandToExecute": "powershell.exe Install-WindowsFeature -name Web-Server -IncludeManagementTools && powershell.exe remove-item 'C:\\inetpub\\wwwroot\\iisstart.htm' && powershell.exe Add-Content -Path 'C:\\inetpub\\wwwroot\\iisstart.htm' -Value $('Hello World from ' + $env:computername)"*/
        }
      }
    }
    /*,
    {
      "type": "microsoft.devtestlab/schedules",
      "apiVersion": "2018-09-15",
      "name": "[parameters('schedules_shutdown_computevm_scc_webapp_windows2019_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_scc_webapp_windows2019_name'))]"
      ],
      "properties": {
        "status": "Enabled",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "1900"
        },
        "timeZoneId": "UTC",
        "notificationSettings": {
          "status": "Disabled",
          "timeInMinutes": 30,
          "notificationLocale": "en"
        },
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_scc_webapp_windows2019_name'))]"
      }
    },
    
*/
  ]
}
