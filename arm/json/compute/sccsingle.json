{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "defaultValue": "larry",
      "type": "String"
    },
    "adminPassword": {
      "defaultValue": "Monday123$",
      "type": "String"
    },
    "virtualNetworks_scc_rg_vnet_name": {
      "defaultValue": "scc-rg-vnet",
      "type": "String"
    },
    "virtualMachines_scc_webapp_windows2019_name": {
      "defaultValue": "scc-webapp-windows2019",
      "type": "String"
    },
    "networkInterfaces_scc_webapp_windows20947_name": {
      "defaultValue": "scc-webapp-windows20947",
      "type": "String"
    },
    "publicIPAddresses_scc_webapp_windows2019_ip_name": {
      "defaultValue": "scc-webapp-windows2019-ip",
      "type": "String"
    },
    "networkSecurityGroups_scc_webapp_windows2019_nsg_name": {
      "defaultValue": "scc-webapp-windows2019-nsg",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_scc_webapp_windows2019_nsg_name')]",
      "location": "eastus",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 320,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 340,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_scc_webapp_windows2019_nsg_name'), '/HTTP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_scc_webapp_windows2019_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "80",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 320,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_scc_webapp_windows2019_nsg_name'), '/HTTPS')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_scc_webapp_windows2019_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "443",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 340,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_scc_webapp_windows2019_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_scc_webapp_windows2019_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_scc_webapp_windows2019_ip_name')]",
      "location": "eastus",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },

    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworks_scc_rg_vnet_name')]",
      "location": "eastus",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["10.0.0.0/16"]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_scc_rg_vnet_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_scc_rg_vnet_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.0.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_scc_webapp_windows20947_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_scc_webapp_windows2019_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_scc_rg_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_scc_webapp_windows2019_nsg_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_scc_webapp_windows2019_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_scc_rg_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_scc_webapp_windows2019_nsg_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[parameters('virtualMachines_scc_webapp_windows2019_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_scc_webapp_windows20947_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_scc_webapp_windows2019_name'), '_OsDisk_1_fd62837d479d4961b32d095714c3686f')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "scc-single3",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_scc_webapp_windows20947_name'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "name": "[concat(parameters('virtualMachines_scc_webapp_windows2019_name'),'/', 'InstallWebServer')]",
      "location": "eastus",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachines_scc_webapp_windows2019_name'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/tutorial-vm-extension/installWebServer.ps1"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File installWebServer.ps1"

          /*"commandToExecute": "$LocalTempDir = $env:TEMP; $ChromeInstaller = "ChromeInstaller.exe"; (new-object    System.Net.WebClient).DownloadFile('http://dl.google.com/chrome/install/375.126/chrome_installer.exe', "$LocalTempDir\$ChromeInstaller"); & "$LocalTempDir\$ChromeInstaller" /silent /install; $Process2Monitor =  "ChromeInstaller"; Do { $ProcessesFound = Get-Process | ?{$Process2Monitor -contains $_.Name} | Select-Object -ExpandProperty Name; If ($ProcessesFound) { "Still running: $($ProcessesFound -join ', ')" | Write-Host; Start-Sleep -Seconds 2 } else { rm "$LocalTempDir\$ChromeInstaller" -ErrorAction SilentlyContinue -Verbose } } Until (!$ProcessesFound)"
          /* "commandToExecute": "powershell.exe Install-WindowsFeature -name Web-Server -IncludeManagementTools && powershell.exe remove-item 'C:\\inetpub\\wwwroot\\iisstart.htm' && powershell.exe Add-Content -Path 'C:\\inetpub\\wwwroot\\iisstart.htm' -Value $('Hello World from ' + $env:computername)"*/
        }
      }
    }
    /*,
    {
      "type": "microsoft.devtestlab/schedules",
      "apiVersion": "2018-09-15",
      "name": "[parameters('schedules_shutdown_computevm_scc_webapp_windows2019_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_scc_webapp_windows2019_name'))]"
      ],
      "properties": {
        "status": "Enabled",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "1900"
        },
        "timeZoneId": "UTC",
        "notificationSettings": {
          "status": "Disabled",
          "timeInMinutes": 30,
          "notificationLocale": "en"
        },
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_scc_webapp_windows2019_name'))]"
      }
    },
    
*/
  ]
}
